---
title: "Data Analysis"
author: "Natalie Cann"
date: "2025-03-12"
output: html_document
editor: 
  markdown: 
    wrap: 72
---

# Setup

Loading in any packages that may be needed.

```{r}
library(readxl) #for loading Excel files
library(dplyr) #for data processing/cleaning
library(tidyr) #for data processing/cleaning
library(skimr) #for nice visualization of data 
library(here) #to set paths
library(ggplot2) # for graphs
library(kableExtra) # for tables
library(readr) # for reading in csv files
library(purrr)
library(lubridate) # for dealing with dates
```

Now, I will load in my datasets. 

```{r, load data}
# Covid vaccine datasets
covid_vaccine_2021 <- readRDS(here("data", "processed-data", "covid-vaccine-2021.rds"))
covid_vaccine_2022 <- readRDS(here("data", "processed-data", "covid-vaccine-2022.rds"))
covid_vaccine_2023 <- readRDS(here("data", "processed-data", "covid-vaccine-2023.rds"))

# Influenza vaccine datasets
flu_vaccine_2021 <- readRDS(here("data", "processed-data", "flu-vaccine-2021.rds"))
flu_vaccine_2022 <- readRDS(here("data", "processed-data", "flu-vaccine-2022.rds"))
flu_vaccine_2023 <- readRDS(here("data", "processed-data", "flu-vaccine-2023.rds"))
```

Loading in datasets made for some analysis in end of EDA document. 

```{r}
# Combine data for all years into one dataframe - covid
covid_vaccine_combined <- bind_rows(
  covid_vaccine_2021 %>%
    select(Date, Cumulative_Administered_Janssen, Cumulative_Administered_Moderna, Cumulative_Administered_Pfizer, Cumulative_Administered_Unk_Manuf) %>%
    pivot_longer(cols = -Date, names_to = "Manufacturer", values_to = "Cumulative_Administered") %>%
    mutate(Year = 2021),  # Add Year column for 2021
  
  covid_vaccine_2022 %>%
    select(Date, Cumulative_Administered_Janssen, Cumulative_Administered_Moderna, Cumulative_Administered_Pfizer, Cumulative_Administered_Novavax, Cumulative_Administered_Unk_Manuf) %>%
    pivot_longer(cols = -Date, names_to = "Manufacturer", values_to = "Cumulative_Administered") %>%
    mutate(Year = 2022),  # Add Year column for 2022
  
  covid_vaccine_2023 %>%
    select(Date, Cumulative_Administered_Janssen, Cumulative_Administered_Moderna, Cumulative_Administered_Pfizer, Cumulative_Administered_Novavax, Cumulative_Administered_Unk_Manuf) %>%
    pivot_longer(cols = -Date, names_to = "Manufacturer", values_to = "Cumulative_Administered") %>%
    mutate(Year = 2023)   # Add Year column for 2023
)

# Rename the factor levels for better readability
covid_vaccine_combined$Manufacturer <- factor(covid_vaccine_combined$Manufacturer,
                                              levels = c("Cumulative_Administered_Janssen", "Cumulative_Administered_Moderna", 
                                                         "Cumulative_Administered_Pfizer", "Cumulative_Administered_Novavax", 
                                                         "Cumulative_Administered_Unk_Manuf"),
                                              labels = c("Janssen", "Moderna", "Pfizer", "Novavax", "Unknown Manufacturer"))

# Combine datasets - flu
flu_vaccine_all <- bind_rows(
  flu_vaccine_2021 %>% mutate(Year = "2021"),
  flu_vaccine_2022 %>% mutate(Year = "2022"),
  flu_vaccine_2023 %>% mutate(Year = "2023")
)
```


# COVID-19 

## Simple Linear Fit Models

I will run a few simple linear fit models that predict number of vaccines administered based on manufacturer.

```{r}
# Combine the data for all years
covid_vaccine_all <- bind_rows(
  covid_vaccine_2021 %>% mutate(Year = 2021),
  covid_vaccine_2022 %>% mutate(Year = 2022),
  covid_vaccine_2023 %>% mutate(Year = 2023)
)

# Reshape the dataset to long format
covid_vaccine_long <- covid_vaccine_all %>%
  select(Date, Year, Administered_Janssen, Administered_Moderna, Administered_Pfizer, Administered_Novavax, Administered_Unk_Manuf) %>%
  pivot_longer(cols = starts_with("Administered"), names_to = "Manufacturer", values_to = "Doses_Administered")

# Rename manufacturer categories for readability
covid_vaccine_long$Manufacturer <- factor(covid_vaccine_long$Manufacturer,
levels = c("Administered_Janssen", "Administered_Moderna", "Administered_Pfizer", "Administered_Novavax", "Administered_Unk_Manuf"), labels = c("Janssen", "Moderna", "Pfizer", "Novavax", "Unknown Manufacturer"))

# Fit a simple linear regression model predicting doses administered based on manufacturer
model <- lm(Doses_Administered ~ Manufacturer, data = covid_vaccine_long)

# Display model summary
summary(model)
```
With an alpa value of 0.05, the p-values for each manufacturer are less than 0.5 (Janssen was set as the reference so it does not appear in the coefficients list with an estimate) . This means that the manufacturer has a statistically significant impact on the number of doses administered. It can be noted that Pfizer and Moderna both have very small p-values (both of 2e-16); furthermore they have positive estimate values, indicating they have a higher number of administered does than Janssen. The negative estimate values for Novavax and Unknown Manufacturer indicate that they have a lower number of administered doses compared to Janssen.

Making a table to display the results above: 

```{r}
library(gt)

# Extracting the summary of the linear regression model
model_summary <- summary(model)

# Get the coefficients (Manufacturer levels)
coefficients <- as.data.frame(model_summary$coefficients)

# Rename columns for better readability
colnames(coefficients) <- c("Estimate", "Std. Error", "t value", "Pr(>|t|)")

# Add the Manufacturer names as a column
coefficients$Manufacturer <- rownames(coefficients)

# Reorder columns manually using base R
coefficients <- coefficients[, c("Manufacturer", "Estimate", "Std. Error", "t value", "Pr(>|t|)")]

# Create a gt table for the regression results
model_gt_table <- coefficients %>%
  gt() %>%
  tab_header(
    title = md("**Linear Regression Model: COVID-19 Vaccine Doses Administered by Manufacturer**")
  ) %>%
  cols_label(
    Manufacturer = md("**Manufacturer**"),
    Estimate = md("**Estimate**"),
    `Std. Error` = md("**Standard Error**"),
    `t value` = md("**t-Value**"),
    `Pr(>|t|)` = md("**P-Value**")
  ) %>%
  tab_style(
    style = list(
      cell_fill(color = "#EAEDED"),
      cell_text(weight = "bold", color = "black")
    ),
    locations = cells_body(columns = "Manufacturer") # Apply to the Manufacturer column
  ) %>%
  tab_style(
    style = cell_fill(color = "#F7F7F7"), # Light gray background for alternating rows
    locations = cells_body(rows = seq(1, nrow(coefficients), 2)) # Apply to odd rows
  ) %>%
  tab_spanner(
    label = "Model Statistics",
    columns = c("Estimate", "Std. Error", "t value", "Pr(>|t|)")
  ) %>%
  tab_footnote(
    footnote = "Regression results for vaccine doses administered by manufacturer.",
    locations = cells_title()
  )

# Display the table
model_gt_table

# Save the table as a PNG file
gtsave(model_gt_table, here("results", "tables", "covid-manuf-reg-table.png"))
```

## Seasonal COVID-19 Vaccine Modelling

This model was suggested by Microsoft copilot. 

```{r}
model_seasonal_covid <- lm(Administered ~ MMWR_week + sin(2 * pi * MMWR_week / 52) + cos(2 * pi * MMWR_week / 52), data = covid_vaccine_all)
summary(model_seasonal_covid)
```
Week: The negative coefficient for Week suggests that as the weeks progress, the number of flu doses administered decreases slightly. 
Seasonal Terms: Both sin(2 * pi * Week/52) and cos(2 * pi * Week/52) are highly significant, indicating strong seasonal patterns in flu vaccine administration.

R-squared: The multiple R-squared value of 0.636 indicates that approximately 63.6% of the variability in flu doses administered can be explained by the model. 



```{r}

```


# Influenza 

## Simple Linear Fit Models

I will run a few simple linear fit models that predict number of vaccines administered based on the week of the year. 

```{r}
# Linear regression models for flu vaccine data
model_2021 <- lm(Flu_Doses_Administered_Weekly_Millions ~ Week, data = flu_vaccine_2021)
model_2022 <- lm(Flu_Doses_Administered_Weekly_Millions ~ Week, data = flu_vaccine_2022)
model_2023 <- lm(Flu_Doses_Administered_Weekly_Millions ~ Week, data = flu_vaccine_2023)

# Model summaries
summary(model_2021)
summary(model_2022)
summary(model_2023)
```

2021: With an alpha of 0.05, we can conclude that the week of the year in 2021 has a statistically significant impact on the flu vaccine doses administered each week of the year. However, it is important to note that the p-value is 0.0468, which is relatively close to 0.05. 

2022: With an alpha of 0.05, we can conclude that the week of the year in 2022 has a statistically significant impact on the flu vaccine doses administered each week of the year (p-value = 0.0269). 

2023:  With an alpha of 0.05, we can conclude that the week of the year in 2023 does not have a statistically significant impact on the flu vaccine doses administered each week of the year (p value = 0.0986). It is interesting that 2023 does not have a statistically significant result, while 2021 and 2022 do. 

## Seasonal Flu Vaccine Modelling

This model was suggested by Microsoft copilot. 

```{r}
model_seasonal_flu <- lm(Flu_Doses_Administered_Weekly_Millions ~ Week + sin(2 * pi * Week / 52) + cos(2 * pi * Week / 52), data = flu_vaccine_all)
summary(model_seasonal_flu)
```
MMWR_week: The positive coefficient for MMWR_week suggests that as the weeks progress, the number of COVID-19 doses administered increases slightly.
Seasonal Term (sin): The term sin(2 * pi * MMWR_week/52) is significant, indicating some seasonal variation in vaccine administration.
Seasonal Term (cos): The term cos(2 * pi * MMWR_week/52) is not significant, suggesting that the cosine component of the seasonal variation is not as strong.

R-squared: The multiple R-squared value of 0.0009149 indicates that the model explains only a very small fraction of the variability in the number of doses administered. 

# Relationship Between COVID-19 Vaccine Administration and Flu Vaccine Administration

I will now attempt to explore the relationship between COVID-10 vaccine administration and flu vaccine administration.

*Cross-Correlation Function (CCF)*
Here is a time series analysis that may be interesting to analyze. This can help determine if increases in COVID-19 vaccine administration are associated with the number of flu vaccines administered later.

```{r}
# Cross-correlation function
ccf(covid_vaccine_combined$Cumulative_Administered, flu_vaccine_all$Cumulative_Flu_Doses_Distributed_Millions, lag.max = 12, plot = TRUE)
```
The small peaks and bars suggest that there is a very weak correlation between the administration of covid vaccines and flu vaccines during this time period (2021-2023). There appear to be a few small negative lags, indicating that flu vaccinations might slightly precede Covid-19 vaccinations. Overall, there is no strong relationship. 

Making graph more aesthetically pleaseing. 

```{r}
# Specify the file path using the here package and open the PNG device
png(here::here("results", "figures", "ccf.png"), width = 800, height = 600)

# Generate the cross-correlation plot with the custom title and y-axis label
ccf(covid_vaccine_combined$Cumulative_Administered, 
    flu_vaccine_all$Cumulative_Flu_Doses_Distributed_Millions, 
    lag.max = 12, 
    plot = TRUE, 
    main = "Cross-Correlation Function between Covid-19 \n Vaccination and Influenza Vaccination", 
    ylab = "")  # Remove default y-axis label

# Change the y-axis label
title(ylab = "Autocorrelation Function (ACF)")

# Close the device to save the plot
dev.off()

# Display the saved plot
# Generate the cross-correlation plot with the custom title and y-axis label
ccf(covid_vaccine_combined$Cumulative_Administered, 
    flu_vaccine_all$Cumulative_Flu_Doses_Distributed_Millions, 
    lag.max = 12, 
    plot = TRUE, 
    main = "Cross-Correlation Function between Covid-19 \n Vaccination and Influenza Vaccination", 
    ylab = "")  # Remove default y-axis label

# Change the y-axis label
title(ylab = "Autocorrelation Function (ACF)")
```


*Vector Autoregression (VAR)*

Suggested by AI.

Ensure that the data is stationary before fitting the VAR model. Below, it appears that the COVID-19 vaccine dataset is stationary, while the flu vaccine dataset is not stationary. Therefore, we need to make the flu vaccine dataset stationary. 

```{r}
# Load needed packages 
library(vars)
library(tidyverse)

# Ensure both data sets cover the same period
combined_data <- merge(
  subset(covid_vaccine_all, select = c(Date, Administered)),
  subset(flu_vaccine_all, select = c(Start_Date, Flu_Doses_Administered_Weekly_Millions)),
  by.x = "Date", by.y = "Start_Date", all = FALSE
)

# Convert to time series
data_ts <- ts(
  combined_data[, c("Administered", "Flu_Doses_Administered_Weekly_Millions")],
  frequency = 52,
  start = c(as.numeric(format(min(combined_data$Date), "%Y")),
            as.numeric(format(min(combined_data$Date), "%U")))
)

# ADF test to ensure data if stationary 
library(tseries)

adf.test(data_ts[, "Administered"])
adf.test(data_ts[, "Flu_Doses_Administered_Weekly_Millions"])
data_ts_diff <- diff(data_ts)
adf.test(data_ts_diff[, "Flu_Doses_Administered_Weekly_Millions"])

# Determine the optimal lag length
lag_selection <- VARselect(data_ts, lag.max = 10, type = "const")
optimal_lag <- lag_selection$selection["AIC(n)"]

# Fit the VAR model
var_model <- VAR(data_ts_diff, p = optimal_lag, type = "const")

# Summarize the VAR model
summary(var_model)

# Compute impulse response functions
irf <- irf(var_model, impulse = "Administered", 
            response = "Flu_Doses_Administered_Weekly_Millions", 
            n.ahead = 10, boot = TRUE)

# Plot the impulse response functions
plot(irf)

# Forecast the next 10 periods
forecast <- predict(var_model, n.ahead = 10)

# Plot the forecast
plot(forecast)

# Granger causality test
granger_test <- causality(var_model, cause = "Administered")
print(granger_test)

```
COVID-19 Vaccine by Manufacturer (Doses_Administered ~ Manufacturer): R-sqaured = 0.02993; Roughly 3% of the variation in doses administered is explained by manufacturer (not high!). However, Moderna (+4,380,710, p < 0.001) and Pfizer (+6,716,912, p < 0.001) are significantly associated with higher doses. 
(Intercept) = 86,879; Moderna = 122,865; Pfizer = 122,865; Novavax = 122,871; Unknown Manufacturer = 122,868 --> these standard errors are VERY high 

COVID-19 Vaccine Seasonality (Administered ~ MMWR_week + sin(2 * pi * MMWR_week/52) + cos(2 * pi * MMWR_week/52)): R = 0.00091; only 0.09% of the variance is explained by seasonality.This isn't high.
(Intercept) = 817,376; MMWR_week = 29,643; sin(2 * pi * MMWR_week/52) = 632,140; cos(2 * pi * MMWR_week/52) = 404,843 --> these standard errors are also VERY high

Flu Vaccine Weekly Doses Over Time (by Year): R-squared = 0.125 (2021), 0.1529 (2022), 0.088 (2023); Therefore, week doesn't have a significant impact.
2021- Inercept SE= 2,128, Week SE = 142	60,223; 2022- Inercept SE = 2,111,Week SE = 483	59,752; 2023-	Inercept SE = 1,997, Week SE = 328	56,521 --> high SEs

Flu Vaccine Seasonality (Flu_Doses_Administered_Weekly_Millions ~ Week + sin(2 * pi * Week/52) + cos(2 * pi * Week/52)): R-squared = 0.636; 63.6% of the variance is explained by seasonality. This suggests that flu vaccine administration has a strong seasonal pattern. 
(Intercept) = 890,231; Week = 36,994; sin(2 * pi * Week/52) = 1,199,243; cos(2 * pi * Week/52) = 797,703 --> high SEs

VAR Analysis: COVID-19 vs Flu Vaccine: No Granger Causality (p = 0.42); No Instantaneous Causality (p = 0.74); Significant Lagged Effect for COVID (lag coefficient = -0.5017, p < 0.001). This suggests that COVID vaccination trends are internally driven and there's no meaningful relationship with flu vaccination trends.
Note: alpha = 0.05
COVID Doses:
Administered.l1 = 0.01683 – Small standard error, suggesting stable estimates for lagged COVID doses.
Flu Doses.l1 = 4.954 – Large standard error, indicating high variability in the effect of flu doses on COVID doses.
Constant = 1,177,000 – Extremely large standard error, suggesting the constant term is poorly estimated due to high variability.
Flu Doses:
Administered.l1 = 0.00006613 – Small but not significant, indicating minimal influence of COVID doses on flu doses.
Flu Doses.l1 = 0.01946 – Small standard error, suggesting stable flu dose predictions from previous flu doses.
Constant = 4,622 – Large standard error, reflecting variability in baseline flu doses.

Putting results into table. 
```{r}
granger_test <- causality(var_model, cause = "Administered")

library(gt)

# Create the table data
granger_table <- data.frame(
  Metric = c("Hypothesis", "F_Test", "df1", "df2", "P_Value"),
  Value = c(
    granger_test$Granger$method,
    granger_test$Granger$statistic[1, 1],
    granger_test$Granger$parameter["df1"],
    granger_test$Granger$parameter["df2"],
    granger_test$Granger$p.value[1, 1]
  )
)

# Format with gt and apply consistent styling
granger_table_gt <- granger_table %>%
  gt() %>%
  tab_header(
    title = md("**Granger Causality Test Results**")
  ) %>%
  cols_label(
    Metric = md("**Metric**"),
    Value = md("**Value**")
  ) %>%
  tab_style(
    style = list(
      cell_fill(color = "#EAEDED"),
      cell_text(weight = "bold", color = "black")
    ),
    locations = cells_body(columns = "Metric") # Apply to the Metric column
  ) %>%
  tab_style(
    style = cell_fill(color = "#EAEDED"),
    locations = cells_body(columns = "Value") # Apply to the Value column
  ) %>%
  tab_style(
    style = cell_fill(color = "#F7F7F7"), # Light gray background for alternating rows
    locations = cells_body(rows = seq(1, nrow(granger_table), 2)) # Apply to odd rows
  ) %>%
  tab_footnote(
    footnote = " Granger causality test results for vaccine data.",
    locations = cells_title()
  )

# Display the table
granger_table_gt

# Save the formatted gt table 
library(webshot2)
library(chromote)
gtsave(granger_table_gt, here("results", "tables", "granger-table-gt.png"))
```
We must fail to reject the null hypothesis. This suggests that changes in COVID vaccination rates do not appear to influence flu vaccination rates in a predictive sense.

Extra Code Chunks :)

```{r}

```

```{r}

```

```{r}

```
