---
title: "Data Processing for Covid Vaccine Data"
author: "Natalie Cann"
date: "2025-04-18"
output: html_document
---

# Setup

Load needed packages. make sure they are installed.

```{r}
library(readxl) #for loading Excel files
library(dplyr) #for data processing/cleaning
library(tidyr) #for data processing/cleaning
library(skimr) #for nice visualization of data 
library(here) #to set paths
library(ggplot2) # for graphs
library(kableExtra) # for tables
library(naniar) # for missingness visualization (gg_miss_var)
library(readr) # for reading in csv files
library(purrr)
library(lubridate) # for dealing with dates
```


# Data loading

Note that for functions that come from specific packages (instead of
base R), I often specify both package and function like so:
package::function() that's not required one could just call the function
specifying the package makes it clearer where the function "lives", but
it adds typing. You can do it either way.

```{r}
# path to datasets
# note the use of the here() package and not absolute paths
covid_vaccine <- read_csv(here("data", "raw-data", "COVID-19_Vaccinations_in_the_United_States_Jurisdiction_20250208.csv"))
```
# Variable Names and Descriptions from CDC Website

**Covid vaccine dataset:**

There are 109 variables, so I will only include specific variables of
interest here. The full list with descriptions can be found at:
https://data.cdc.gov/Vaccinations/COVID-19-Vaccinations-in-the-United-States-Jurisdi/unsk-b7fc/about_data

-   Date: Date data are reported on CDC COVID Data Tracker
    (https://covid.cdc.gov/covid-data-tracker/#vaccinations)
-   MMWR_week: The week of the epidemiologic year as defined by the
    Morbidity and Mortality Weekly Report
    (https://ndc.services.cdc.gov/wp-content/uploads/MMWR_week_overview.pdf)
-   Location: Jurisdiction (State/Territory/Federal Entity)
-   Distribued: Total number of delivered doses
-   Distributed_Janssen: Total number of J&J/Janssen doses delivered
-   Distributed_Moderna: Total number of Moderna doses delivered
-   Distributed_Pfizer: Total number of Pfizer-BioNTech doses delivered
-   Distributed_Novavax: Total number of Novavax doses delivered
-   Distributed_Unk_Manuf: Total number of doses delivered from other
    manufacturers
-   Administered: Total number of administered doses based on the
    jurisdiction (state/territory) where administered
-   Administered_Janssen: Total number of J&J/Janssen doses administered
-   Administered_Moderna: Total number of Moderna doses administered
-   Administered_Pfizer: Total number of Pfizer-BioNTech doses
    administered
-   Administered_Novavax: Total number of Novavax doses administered
-   Administered_Unk_Manuf: Total number of doses administered from
    other manufacturers

# Basic data exploration

```{r}
head(covid_vaccine) #viewing first rows
dim(covid_vaccine) #viewing dimensions
```
Now, I will assess the missingness of the dataset. Since the
covid_vaccine dataset is very large, I will perform a gg_miss_var() on
the variables of interest as well.

```{r}
# Covid Dataset
gg_miss_var(covid_vaccine) # viewing missingness

# Variables of interest in Covid Dataset
covid_vaccine %>%
  select(Date, MMWR_week, Location, Distributed, Distributed_Janssen, Distributed_Moderna, Distributed_Pfizer, Distributed_Novavax, Distributed_Unk_Manuf, Administered, Administered_Janssen, Administered_Moderna, Administered_Pfizer, Administered_Novavax, Administered_Unk_Manuf) %>%
  gg_miss_var()
```
It appears as though the covid_vaccine dataset has some missing
variables. When I look at the gg_miss_var() graph for the variables of
interest, it looks as though missingness is less of an issue. However,
there is still missing observations for the variables relating to the
Novavax vaccine (Distributed_Novavax and Administered_Novavax). This may
be due to the fact that this vaccine was released August 30th of 2022
according to the CDC
(https://www.fda.gov/vaccines-blood-biologics/coronavirus-covid-19-cber-regulated-biologics/novavax-covid-19-vaccine-adjuvanted).
I will need to account for this in data cleaning. The flu_vaccine
dataset luckily has no missing observations. However, I will still need
to perform data cleaning on this dataset due to the fact that the doses
are counted cumulatively and need to be transformed into their accurate
count (millions).

Considering the Novavax vaccine was created in August 2022, I will
assess the missingness of the data from August 2022 onwards.

```{r}
covid_vaccine %>%
  filter(Date >= "2022-08-30") %>%
  select(Distributed_Novavax, Administered_Novavax) %>%
  gg_miss_var()
```

It appears as though the data past August 30, 2022 is not missing for
the Novavax vaccine (Distributed_Novavax and Administered_Novavax).

I will determine the class of each variable in the covid_vaccine and
flu_vaccine datasets.

```{r}
# Covid Dataset
map(covid_vaccine %>% select(Date, MMWR_week, Location, Distributed, Distributed_Janssen, Distributed_Moderna, Distributed_Pfizer, Distributed_Novavax, Distributed_Unk_Manuf, Administered, Administered_Janssen, Administered_Moderna, Administered_Pfizer, Administered_Novavax, Administered_Unk_Manuf), class)
```

# Fixing date variable 
I will first fix the "date" column in the covid_vaccine dataset. 

```{r}
covid_vaccine <- covid_vaccine %>%
  mutate(Date = as.character(Date), # Ensure Date is treated as a character before conversion
         Date = mdy(Date)) # Convert to Date format using lubridate # Convert Date column to Date format using lubridate

head(covid_vaccine) # check if this worked
class(covid_vaccine$Date)
```
This worked; Date is now in the correct format. 

# Create dataset containing variables of interest

I will now create a dataset which contains the variables of interest for my analysis. 
```{r}
covid_vaccine_combined <- covid_vaccine %>% # creating new dataset with only the variables of interest (using the select function)
  select(Date, MMWR_week, Location, Distributed, Distributed_Janssen, Distributed_Moderna, Distributed_Pfizer, Distributed_Novavax, Distributed_Unk_Manuf, Administered, Administered_Janssen, Administered_Moderna, Administered_Pfizer, Administered_Novavax, Administered_Unk_Manuf)

dim(covid_vaccine_combined) # viewing dimensions of new dataset to make sure this previous step worked! there should be 15 variables now...
```

# Creating Region and Year Variable 

Putting states into geographic regions for the covid_vaccine_combined dataset. 

```{r}
# create region
covid_vaccine_combined <- covid_vaccine_combined %>%
  mutate(Region = case_when(
    Location %in% c("AL", "AR", "FL", "GA", "KY", "LA", "MS", "NC", "SC", "TN", "VA", "MD", "WV", "TX", "OK", "DE") ~ "South",
    Location %in% c("CT", "ME", "MA", "NH", "NY", "RI", "VT", "PA", "NJ") ~ "Northeast",
    Location %in% c("IL", "IN", "IA", "KS", "MI", "MN", "MO", "NE", "ND", "OH", "SD", "WI") ~ "Midwest",
    Location %in% c("AK", "AZ", "CA", "CO", "HI", "ID", "MT", "NV", "NM", "OR", "UT", "WA", "WY") ~ "West",
    TRUE ~ NA_character_
  ))

covid_vaccine_combined <- covid_vaccine_combined %>%
  filter(!is.na(Region)) # drop any NAs

# create year
covid_vaccine_combined <- covid_vaccine_combined %>%
  mutate(Year = year(Date)) # create year variable

```
  
# Creating New Summed Variables for Vax distribution and administration 
I will now sum to get the total number of doses administered and distributed by region and week. I will take out Administered_Novavax since it wasn't present the whole time of interest.

```{r}
covid_vaccine_combined <- covid_vaccine_combined %>%
  group_by(Year, MMWR_week, Region) %>%
  summarise(total_distributed=sum(Distributed), total_dist_janssen=sum(Distributed_Janssen), total_dist_moderna=sum(Distributed_Moderna), total_dist_pfizer=sum(Distributed_Pfizer), total_dist_novavax=sum(Distributed_Novavax), total_dist_unk=sum(Distributed_Unk_Manuf), total_administered=sum(Administered), total_admin_janssen=sum(Administered_Janssen), total_admin_moderna=sum(Administered_Moderna), total_admin_pfizer=sum(Administered_Pfizer), total_admin_novavax=sum(Administered_Novavax), total_admin_unk=sum(Administered_Unk_Manuf), na.rm = TRUE)
```
*Data collection was not the best in 2020, as we see total_distributed is equal to 2225925 for the first row, while the total_dist_manufacturer specific variables are equal to 0. We will be ignoring 2020 for the analysis - vaccines weren't as commonly accessible during this time.*

```{r}
covid_vaccine_combined <- covid_vaccine_combined %>%
  filter(Year != 2020) # removing 2020 from dataset
```

# Creation of Synthetic Variables to be used in Model

My dataset doesn't have enough great predictors for the modeling analysis - so I will create some here. 

```{r}
# per capita doses: doses_per_100k
# average US population b/w Dec 2020 and May 2023 
# Dec 2020: 331.5 million
# May 2023:334.9 million
# Average: 333.2 million
US_Population <- 333200000
covid_vaccine_combined <- covid_vaccine_combined %>%
  mutate(
    doses_per_100k = (total_administered / US_Population) * 100000
  )

# Average age of individuals who got vaccinated that week: avg_age_vaccinated
covid_vaccine_combined <- covid_vaccine_combined %>%
  mutate(
    avg_age_vaccinated = runif(n(), min = 35, max = 50) # specifying what I want the averages to fall between
  )

# Vaccine Hesitancy Index: hesitancy_index (0 = lowest hesitancy and 1 = highest hesitancy)
library(scales)
set.seed(321)
covid_vaccine_combined <- covid_vaccine_combined %>%
  mutate(
    # Apply log to compress large values, add 1 to avoid log(0)
    log_administered = log1p(total_administered),
    
    # Rescale log-transformed doses to [0, 1]
    dose_scaled = rescale(log_administered, to = c(0, 1)),
    
    # Invert so more doses â†’ lower hesitancy
    hesitancy_base = 1 - dose_scaled,
    
    # Add random noise, then clamp between 0.2 and 0.6
    hesitancy_index = pmin(pmax(hesitancy_base + runif(n(), -0.05, 0.05), 0.2), 0.6)
  ) %>%
  select(-log_administered, -dose_scaled, -hesitancy_base)

#Vaccine Accessibility Index: accessibility_index (0 = lowest accessibility and 1 = highest accessibility)
set.seed(322)  # Different seed than hesitancy for realism
covid_vaccine_combined <- covid_vaccine_combined %>%
  mutate(
    # Log-transform and rescale administered doses
    log_administered = log1p(total_administered),
    dose_scaled = rescale(log_administered, to = c(0, 1)),

    # Accessibility goes up with higher dose volume
    accessibility_base = dose_scaled,
    
    # Add small random noise and constrain to range [0.4, 0.9]
    accessibility_index = pmin(pmax(accessibility_base + runif(n(), -0.05, 0.05), 0.4), 0.9)
  ) %>%
  select(-log_administered, -dose_scaled, -accessibility_base)

# Proportion of Pfizer: prop_pfizer
covid_vaccine_combined <- covid_vaccine_combined %>%
  mutate(
    prop_pfizer = total_dist_pfizer / total_distributed
  )

# Proportion of vaccines administered to males
set.seed(123)
covid_vaccine_combined <- covid_vaccine_combined %>%
  mutate(Proportion_Male = runif(n(), min = 0.45, max = 0.55))
```

# Save Dataset

Now, I will save the dataset. 

```{r}
# Save the cleaned dataset at an RDS to the data --> processed-data folder
location_covid <- here::here("data","processed-data", "covid-vaccine.rds")
saveRDS(covid_vaccine_combined, file = location_covid)
```


```{r}

```