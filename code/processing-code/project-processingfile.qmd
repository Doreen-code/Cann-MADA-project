---
title: "Data Processing for Covid and Flu Vaccine Data"
author: "Natalie Cann"
date: "2025-02-21"
output: html_document
editor: 
  markdown: 
    wrap: 72
---

# Setup

Load needed packages. make sure they are installed.

```{r}
library(readxl) #for loading Excel files
library(dplyr) #for data processing/cleaning
library(tidyr) #for data processing/cleaning
library(skimr) #for nice visualization of data 
library(here) #to set paths
library(ggplot2) # for graphs
library(kableExtra) # for tables
library(naniar) # for missingness visualization (gg_miss_var)
library(readr) # for reading in csv files
library(purrr)
library(lubridate) # for dealing with dates
```

# Data loading

Note that for functions that come from specific packages (instead of
base R), I often specify both package and function like so:
package::function() that's not required one could just call the function
specifying the package makes it clearer where the function "lives", but
it adds typing. You can do it either way.

```{r}
# path to datasets
# note the use of the here() package and not absolute paths
covid_vaccine <- read_csv(here("data", "raw-data", "COVID-19_Vaccinations_in_the_United_States_Jurisdiction_20250208.csv"))
flu_vaccine <- read_csv(here("data", "raw-data", "Weekly_Cumulative_Doses__in_Millions__of_Influenza_Vaccine_Distributed_by_Flu_Season_in_the_United_States_20250208.csv"))
```

# Variable Names and Descriptions from CDC Website

**Covid vaccine dataset:**

There are 109 variables, so I will only include specific variables of
interest here. The full list with descriptions can be found at:
https://data.cdc.gov/Vaccinations/COVID-19-Vaccinations-in-the-United-States-Jurisdi/unsk-b7fc/about_data

-   Date: Date data are reported on CDC COVID Data Tracker
    (https://covid.cdc.gov/covid-data-tracker/#vaccinations)
-   MMWR_week: The week of the epidemiologic year as defined by the
    Morbidity and Mortality Weekly Report
    (https://ndc.services.cdc.gov/wp-content/uploads/MMWR_week_overview.pdf)
-   Location: Jurisdiction (State/Territory/Federal Entity)
-   Distribued: Total number of delivered doses
-   Distributed_Janssen: Total number of J&J/Janssen doses delivered
-   Distributed_Moderna: Total number of Moderna doses delivered
-   Distributed_Pfizer: Total number of Pfizer-BioNTech doses delivered
-   Distributed_Novavax: Total number of Novavax doses delivered
-   Distributed_Unk_Manuf: Total number of doses delivered from other
    manufacturers
-   Administered: Total number of administered doses based on the
    jurisdiction (state/territory) where administered
-   Administered_Janssen: Total number of J&J/Janssen doses administered
-   Administered_Moderna: Total number of Moderna doses administered
-   Administered_Pfizer: Total number of Pfizer-BioNTech doses
    administered
-   Administered_Novavax: Total number of Novavax doses administered
-   Administered_Unk_Manuf: Total number of doses administered from
    other manufacturers

**Flu vaccine dataset:**

There are 9 variables in this dataset. The CDC website did not include
descriptions for the variables, however they are pretty straightforward.
I added my own descriptions below.
https://data.cdc.gov/Vaccinations/Weekly-Cumulative-Doses-in-Millions-of-Influenza-V/k87d-gv3u/about_data

-   Influenza_Season: flu season (format: year1-year2)
-   Start_Date: start of week
-   End_Date: end of week
-   Reporting_Timeframe: start of week to end of week
-   Week: week number of the year (1 to 52)
-   Week_Sort_Order: week in flu season (1 to 32)
-   Current_Season_Week_Ending_Label: appears to be an administrative
    variable
-   Cumulative_Flu_Doses_Distributed: cumulative flu doses distributed
    in millions
-   Current_Through: also appears to be an administrative variable

# Preliminary Examination of Data

I will first assess the dimensions of each dataset and view the first
few rows to get a better idea of what data cleaning should be done.

```{r}
# Covid Dataset
head(covid_vaccine) #viewing first rows
dim(covid_vaccine) #viewing dimensions

# Influenza Dataset
head(flu_vaccine) #viewing first rows
dim(flu_vaccine) #viewing dimensions
```

Now, I will assess the missingness of each dataset. Since the
covid_vaccine dataset is very large, I will perform a gg_miss_var() on
the variables of interest as well.

```{r}
# Covid Dataset
gg_miss_var(covid_vaccine) # viewing missingness

# Variables of interest in Covid Dataset
covid_vaccine %>%
  select(Date, MMWR_week, Location, Distributed, Distributed_Janssen, Distributed_Moderna, Distributed_Pfizer, Distributed_Novavax, Distributed_Unk_Manuf, Administered, Administered_Janssen, Administered_Moderna, Administered_Pfizer, Administered_Novavax, Administered_Unk_Manuf) %>%
  gg_miss_var()

# Influenza Dataset
gg_miss_var(flu_vaccine) # viewing missingness

```

It appears as though the covid_vaccine dataset has some missing
variables. When I look at the gg_miss_var() graph for the variables of
interest, it looks as though missingness is less of an issue. However,
there is still missing observations for the variables relating to the
Novavax vaccine (Distributed_Novavax and Administered_Novavax). This may
be due to the fact that this vaccine was released August 30th of 2022
according to the CDC
(https://www.fda.gov/vaccines-blood-biologics/coronavirus-covid-19-cber-regulated-biologics/novavax-covid-19-vaccine-adjuvanted).
I will need to account for this in data cleaning. The flu_vaccine
dataset luckily has no missing observations. However, I will still need
to perform data cleaning on this dataset due to the fact that the doses
are counted cumulatively and need to be transformed into their accurate
count (millions).

Considering the Novavax vaccine was created in August 2022, I will
assess the missingness of the data from August 2022 onwards.

```{r}
covid_vaccine %>%
  filter(Date >= "2022-08-30") %>%
  select(Distributed_Novavax, Administered_Novavax) %>%
  gg_miss_var()
```

It appears as though the data past August 30, 2022 is not missing for
the Novavax vaccine (Distributed_Novavax and Administered_Novavax).

I will determine the class of each variable in the covid_vaccine and
flu_vaccine datasets.

```{r}
# Covid Dataset
map(covid_vaccine %>% select(Date, MMWR_week, Location, Distributed, Distributed_Janssen, Distributed_Moderna, Distributed_Pfizer, Distributed_Novavax, Distributed_Unk_Manuf, Administered, Administered_Janssen, Administered_Moderna, Administered_Pfizer, Administered_Novavax, Administered_Unk_Manuf), class)
```

```{r}
# Flu Dataset
map(flu_vaccine, class)
```

# Cleaning Covid Vaccine Data

I will first fix the "date" column in the covid_vaccine dataset. 

```{r}
covid_vaccine <- covid_vaccine %>%
  mutate(Date = as.character(Date), # Ensure Date is treated as a character before conversion
         Date = mdy(Date)) # Convert to Date format using lubridate # Convert Date column to Date format using lubridate

head(covid_vaccine) # check if this worked
class(covid_vaccine$Date)
```

This worked; Date is now in the correct format. I will now create a
dataset which contains the variables of interest.

```{r}

covid_vaccine_interest <- covid_vaccine %>% # creating new dataset with only the variables of interest (using the select function)
  select(Date, MMWR_week, Location, Distributed, Distributed_Janssen, Distributed_Moderna, Distributed_Pfizer, Distributed_Novavax, Distributed_Unk_Manuf, Administered, Administered_Janssen, Administered_Moderna, Administered_Pfizer, Administered_Novavax, Administered_Unk_Manuf)

dim(covid_vaccine_interest) # viewing dimensions of new dataset to make sure this previous step worked! there should be 15 variables now...
```

I will now create a subset dataset for the years 2021, 2022, and 2023. I
will exlucde 2020 because the vaccine was not available to the public yet. Additionally, it is important to note that the 2023 dataset will be smaller because it only contains data from January to March. 

```{r}
# Create separate datasets for each year (2021, 2022, 2023)
covid_vaccine_2021 <- covid_vaccine_interest %>% filter(year(Date) == 2021)
covid_vaccine_2022 <- covid_vaccine_interest %>% filter(year(Date) == 2022)
covid_vaccine_2023 <- covid_vaccine_interest %>% filter(year(Date) == 2023) 

# Check dimensions of each dataset
dim(covid_vaccine_2021)
dim(covid_vaccine_2022)
dim(covid_vaccine_2023)

# View first few rows of each dataset
head(covid_vaccine_2021)
head(covid_vaccine_2022)
head(covid_vaccine_2023)

# Check if any NAs in each dataset due to Novavax being released mid 2022
sum(is.na(covid_vaccine_2021$Distributed_Novavax))
sum(is.na(covid_vaccine_2021$Administered_Novavax))
sum(is.na(covid_vaccine_2022$Distributed_Novavax))
sum(is.na(covid_vaccine_2022$Administered_Novavax))
sum(is.na(covid_vaccine_2023$Distributed_Novavax))
sum(is.na(covid_vaccine_2023$Administered_Novavax))
```

Note: It makes sense that the 2021 dataset has NAs for
Distributed_Novavax and Administered_Novavax because the vaccine was not
released until August 30, 2022. Additionally, it makes sense that the
2022 dataset has NAs for Distributed_Novavax and Administered_Novavax
because the vaccine wasn't released until later that year. It is good to
see that there are no NAs in the 2023 dataset for Distributed_Novavax
and Administered_Novavax.

Now, I will create a function that calculates the cumulative vaccines distributed and administered by each manufacturer (and puts them into a new column for each dataset). I used chatGPT to help me with this step. 
Prompt: please help me create a variable for the covid_vaccine_2021, covid_vaccine_2022, and covid_vaccine_2023 dataset that shows cumulative doses distributed and administered from each manufacturer

```{r}
# Function to calculate cumulative doses
calculate_cumulative <- function(df) {
  df <- df %>%
    arrange(Date) %>%  # Ensure data is sorted by date
    mutate(
      Distributed_Novavax = ifelse(Date < as.Date("2022-07-27"), 0, Distributed_Novavax),
      Administered_Novavax = ifelse(Date < as.Date("2022-07-27"), 0, Administered_Novavax)
    ) %>%
    mutate(
      Cumulative_Distributed = cumsum(Distributed),
      Cumulative_Distributed_Janssen = cumsum(Distributed_Janssen),
      Cumulative_Distributed_Moderna = cumsum(Distributed_Moderna),
      Cumulative_Distributed_Pfizer = cumsum(Distributed_Pfizer),
      Cumulative_Distributed_Novavax = cumsum(Distributed_Novavax),
      Cumulative_Distributed_Unk_Manuf = cumsum(Distributed_Unk_Manuf),

      Cumulative_Administered = cumsum(Administered),
      Cumulative_Administered_Janssen = cumsum(Administered_Janssen),
      Cumulative_Administered_Moderna = cumsum(Administered_Moderna),
      Cumulative_Administered_Pfizer = cumsum(Administered_Pfizer),
      Cumulative_Administered_Novavax = cumsum(Administered_Novavax),
      Cumulative_Administered_Unk_Manuf = cumsum(Administered_Unk_Manuf)
    )
  return(df)
}

# Apply function to each dataset
covid_vaccine_2021 <- calculate_cumulative(covid_vaccine_2021)
covid_vaccine_2022 <- calculate_cumulative(covid_vaccine_2022)
covid_vaccine_2023 <- calculate_cumulative(covid_vaccine_2023)

# Check the first few rows to confirm the new columns
head(covid_vaccine_2021)
head(covid_vaccine_2022)
head(covid_vaccine_2023)
```

# Cleaning Flu Vaccine Data

I will first fix the "Start_Date" and "End_Date" columns in the
flu_vaccine dataset.

```{r}
# Start_Date
flu_vaccine <- flu_vaccine %>%
  mutate(Start_Date = as.character(Start_Date), # Ensure Start_Date is treated as a character before conversion
         Start_Date = mdy(Start_Date)) # Convert to Date format using lubridate # Convert Start_Date column to Date format using lubridate

#End_Date
flu_vaccine <- flu_vaccine %>%
  mutate(End_Date = as.character(End_Date), # Ensure End_Date is treated as a character before conversion
         End_Date = mdy(End_Date)) # Convert to Date format using lubridate # Convert End_Date column to Date format using lubridate

#Checking to see if these two steps worked
head(flu_vaccine) 
class(flu_vaccine$Start_Date)
class(flu_vaccine$End_Date)
```

This worked! I will now create a variable that contains the number of
flu vaccine doses administered per week. 

```{r}
flu_vaccine <- flu_vaccine %>%
  group_by(Influenza_Season) %>% # group by influenza season
  arrange(Start_Date) %>% # arrange by start date so the subtraction works correctly
  mutate(Flu_Doses_Administered_Weekly = Cumulative_Flu_Doses_Distributed - lag(Cumulative_Flu_Doses_Distributed)) %>% # create new variable that contains the number of flu vaccine doses administered per week
  mutate(Flu_Doses_Administered_Weekly = ifelse(is.na(lag(Cumulative_Flu_Doses_Distributed)), 
                                                Cumulative_Flu_Doses_Distributed, 
                                                Flu_Doses_Administered_Weekly)) %>% # ensure if flu season starts over that the number of doses from the cumulative column is copied over
  ungroup()
```

It appeared as though this worked. I did some simple math to make sure
that the new variable was created correctly. (0.52 + 2.71 = 3.23; 6.95 +
2.71 + 0.52 = 10.18 ... ) Furthermore, there is no overlap of subtraction between the seasons. 

Now, I will create two variables that display the number of doses of the
flu vaccine administered in millions to get the accurate count (One for
the cumulative doses and one for the weekly doses).

```{r}
flu_vaccine <- flu_vaccine %>% # creating new variables that display the number of doses of the flu vaccine administered in millions (one for the cumulative doses and one for the weekly doses)
  mutate(Cumulative_Flu_Doses_Distributed_Millions = Cumulative_Flu_Doses_Distributed * 1000000,
         Flu_Doses_Administered_Weekly_Millions = Flu_Doses_Administered_Weekly * 1000000)

head(flu_vaccine) # making sure this step worked and that the two new variables were created correctly!
```

It looks like this step worked as there are two new variables
(cumulative and weekly) that display the number of flu vaccine doses
administered in millions.

Now, I will create a dataset for each year that I also created a separate dataset for the covid vaccine (2021, 2022, 2023). I will use the start date to determine the year (rather than the influenza season).

```{r}
# Dataset for 2021
flu_vaccine_2021 <- flu_vaccine %>% filter(year(Start_Date) == 2021)

# Dataset for 2022
flu_vaccine_2022 <- flu_vaccine %>% filter(year(Start_Date) == 2022)

# Dataset for 2023
flu_vaccine_2023 <- flu_vaccine %>% filter(year(Start_Date) == 2023)

# Check dimensions of each dataset
dim(flu_vaccine_2021)
dim(flu_vaccine_2022)
dim(flu_vaccine_2023)

# View first few rows of each dataset
head(flu_vaccine_2021)
head(flu_vaccine_2022)
head(flu_vaccine_2023)
```

# Saving New Datasets 

I will save the new data as RDS files in the processed-data folder. This will preserve the data in its current state.


```{r}
# Save the covid datasets as RDS files
location_covid_2021 <- here::here("data","processed-data", "covid-vaccine-2021.rds")
saveRDS(covid_vaccine_2021, file = location_covid_2021)

location_covid_2022 <- here::here("data","processed-data", "covid-vaccine-2022.rds")
saveRDS(covid_vaccine_2022, file = location_covid_2022)

location_covid_2023 <- here::here("data","processed-data", "covid-vaccine-2023.rds")
saveRDS(covid_vaccine_2023, file = location_covid_2023)

# Save the flu datasets as RDS files
location_flu_2021 <- here::here("data","processed-data", "flu-vaccine-2021.rds")
saveRDS(flu_vaccine_2021, file = location_flu_2021)

location_flu_2022 <- here::here("data","processed-data", "flu-vaccine-2022.rds")
saveRDS(flu_vaccine_2022, file = location_flu_2022)

location_flu_2023 <- here::here("data","processed-data", "flu-vaccine-2023.rds")
saveRDS(flu_vaccine_2023, file = location_flu_2023)
```



Extra Code Chunks :)

```{r}

```

```{r}

```

```{r}

```

```{r}

```
